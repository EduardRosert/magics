#!/usr/bin/ksh

version="2.24.0"
git_home="/home/graphics/cgs/git"
magics=""
install_home="/usr/local/apps/Magics/$version"
debug="off"
bufr="on"
netcdf="on"
odb="on"
grib="on"
metview="off"
cairo="on"
regression="off"
spot="off"
build_home="/scratch/graphics/cgs/build/$version/${HOST}"
run="4"
cmake="cmake"
tar="off"

odb_version="0.10.2"
grib_version="1.13.0"
emos_version="000400"


case "${OS_VERSION}" in    
    opensuse113) # Local worksation
        regression="off"
        cmake="/usr/local/apps/cmake/current/bin/cmake"
        boost="/usr/local/apps/boost/1.50.0"
        proj4="/usr/local/apps/proj4/4.8.0/LP64"
        python="/usr/local/apps/python/2.7.1-02"
        netcdf_lib="/usr/local/apps/netcdf4/4.1.3/LP64"
        odb_lib="/usr/local/apps/odb_api/${odb_version}"
        grib_lib="/usr/local/lib/metaps/lib/grib_api/${grib_version}"
        pgi_lib="/usr/local/apps/pgi/pgi-10.8/linux86-64/10.8/libso"
        emos_lib="/usr/local/apps/libemos/${emos_version}"
        spot_lib="/usr/local/lib/metaps/lib/spot_database/new"
        
    ;;
    opensuse131) # New Local worksation
        tar='on'
        regression="off"
        debug="off"
        odb="on"
        bufr="on"
        spot="off"
        cmake="cmake"
        static='off'
        proj4="/usr/local/apps/proj4/4.8.0/LP64/$EC_COMPILER_FAMILY/$EC_COMPILER_VERSION"
        python="/usr/local/apps/python/2.7.1-02"
        netcdf_lib="/usr/local/apps/netcdf4/4.1.3/LP64"
        odb_lib="/usr/local/apps/odb_api/${odb_version}/$EC_COMPILER_FAMILY/$EC_COMPILER_VERSION"
        grib_lib="//usr/local/apps/grib_api/${grib_version}/$EC_COMPILER_FAMILY/$EC_COMPILER_VERSION"
        spot_lib="/usr/local/lib/metaps/lib/spot_database/new"
        emos_lib="/usr/local/apps/libemos/${emos_version}/$EC_COMPILER_FAMILY/$EC_COMPILER_VERSION"
        run="4"
    ;;
    sles11) # lxab lxop
        if [[ $HOST = "lxop01" ]];then
            build_home="/home/graphics/cgs/build/$version/${HOST}"
            odb='off'
            bufr='off'
        fi
        cmake="/usr/local/apps/cmake/current/bin/cmake"
        boost="/usr/local/apps/boost/1.50.0"
        proj4="/usr/local/apps/proj4/4.8.0/LP64"
        python="/usr/local/apps/python/2.7.1-02"
        netcdf_lib="/usr/local/apps/netcdf_lib/LP64"
        odb_lib="/usr/local/apps/odb_api/${odb_version}"
        grib_lib="/usr/local/lib/metaps/lib/grib_api/${grib_version}"
        emos_lib="/usr/local/apps/libemos/${emos_version}"
        pgi_lib="/usr/local/apps/pgi/pgi-10.8/linux86-64/10.8/libso"
        spot_lib="/usr/local/lib/metaps/lib/spot_database/new"
        run="4"
    ;;
    rhel6) #ecgb
        cmake="/usr/local/apps/cmake/current/bin/cmake"
        boost="/usr/local/apps/boost/1.50.0"
        proj4="/usr/local/apps/proj4/4.8.0/LP64"
        magics="ecgb"
        python="/usr/local/apps/python/current"
        odb_lib="/usr/local/apps/odb_api/${odb_version}"
        grib_lib="/usr/local/apps/grib_api/${grib_version}"
        spot_lib="/usr/local/apps/spot_database/new"
        emos_lib="/usr/local/apps/libemos/${emos_version}"
        run="10"
    ;;

 esac   
    




args="-DCMAKE_INSTALL_PREFIX=${install_home} -DENABLE_STATIC_LIBRARY=ON"
args=" $args "
args="-DCMAKE_INSTALL_PREFIX=${install_home} "
args=" $args -DMAGICS_BUILD=${magics}"
args=" $args -DPROJ4_PATH=$proj4"
args=" $args -DENABLE_PYTHON=ON -DCMAKE_PREFIX_PATH=$python"

if [[ $static = "on" ]];then
    args="$args  -DENABLE_STATIC_LIBRARY=ON"
    echo "static enabled"
else
    args="$args -DENABLE_STATIC=OFF"
    echo "No static library"
fi
if [[ $debug = "on" ]];then
    args="$args -DCMAKE_BUILD_TYPE=Debug"
    echo "Debug enabled"
else
    args="$args -DCMAKE_BUILD_TYPE=Release"
    echo "Release Mode enabled"
fi
if [[ $regression = "on" ]];then
    args="$args -DENABLE_REGRESSION=ON -DENABLE_REGRESSION_UPLOAD=ON"
    echo "Regression enabled"
else
    args="$args -DENABLE_REGRESSION=OFF"
    echo "Regression disabled"
fi
if [[ $metview = "on" ]];then
    args="$args -DENABLE_METVIEW=ON"
    echo "Metview enabled"
else
    args="$args -DENABLE_MEVIEW=OFF"
    echo "Metview not required"
fi
if [[ $cairo = "on" ]];then
    args="$args -DENABLE_CAIRO=ON"
    echo "Cairo enabled"
else
    args="$args -DENABLE_CAIRO=OFF"
    echo "Cairo not required"
fi
if [[ $bufr = "on" ]];then
    args=" $args -DENABLE_BUFR=ON"
    if [[ $pgi_lib != "" ]];then
        args=" $args -DWITH_PGI_FORTRAN=ON -DPGI_PATH=${pgi_lib}"
    fi
    if [[ $emos_lib != "" ]];then
        args=" $args -DEMOS_PATH=${emos_lib}"
    fi
    echo "Bufr enabled"
else
    args="$args -DENABLE_BUFR=OFF"
    echo "Bufr not required"
fi
if [[ $netcdf = "on" ]];then
    args=" $args -DENABLE_NETCDF=ON "
    echo "Netcdf enabled"
    if [[ $netcdf_lib != "" ]];then
        args=" $args -DNETCDF_PATH=${netcdf_lib}"
    fi
else
    args="$args -DENABLE_NETCDF=OFF"
    echo "NETCDF not required"
fi
if [[ $odb = "on" ]];then
    args="$args -DENABLE_ODB=ON "
    echo "ODB enabled"
    if [[ $odb_lib != "" ]];then
        args=" $args -DODB_API_PATH=${odb_lib}"
    fi
else
    args="$args -DENABLE_ODB=OFF"
    echo "ODB not required"
fi
if [[ $grib = "on" ]];then
    args="$args -DENABLE_GRIB=ON "
    echo "GRIB enabled"
    if [[ $grib_lib != "" ]];then
        args=" $args -DGRIB_API_PATH=${grib_lib}"
    fi
else
    args="$args -DENABLE_GRIB=OFF"
    echo "GRIB not required"
fi
if [[ $spot = "on" ]];then
    args="$args -DENABLE_SPOT=ON "
    echo "SPOT enabled"
    if [[ $spot_lib != "" ]];then
        args=" $args -DSPOT_PATH=${spot_lib}"
    fi
else
    args="$args -DENABLE_SPOT=OFF"
    echo "GRIB not required"
fi
echo "start"

echo ${build_home}
mkdir -p ${build_home}
cd ${build_home}
#rm -fR *


$cmake ${git_home}/magics $args


make -j ${run} install
ctest
if [[ $regression = "on" ]];then
    ctest -R summary
fi


if [[ $tar = "on" ]];then

    echo "Removing existing embedded cmake directory"
    rm -rf ${git_home}/magics/cmake
    echo "copying new embedded cmake directory"
    cp  -r ${git_home}/ecbuild/cmake ${git_home}
    echo "creating tarball..."
    make package_source
    echo "Removing embedded cmake directory"
    rm -rf ${git_home}/magics/cmake
    echo "Generated make_package_source script for creating source tarballs"
    echo ""

fi


