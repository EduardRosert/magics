#---------------------------------#
#      general configuration      #
#---------------------------------#

sudo: false

branches:
  only:
    - develop
    - master
    - /^\d+\.\d+\.\d+$/

language: cpp

matrix:
  include:
    - os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - libpango1.0-dev
      env:
        MINICONDA_FILE="Miniconda3-latest-Linux-x86_64.sh"
        PROJ4_PATH=~/miniconda3

    - os: osx
      osx_image: xcode10.1
      addons:
        homebrew:
          packages:
            - pango

      env:
        MINICONDA_FILE="Miniconda3-latest-MacOSX-x86_64.sh"

env:
  global:
    - MAGICS_SRC=${TRAVIS_BUILD_DIR}
    - MAGICS_PYTHON_SRC=${MAGICS_SRC}/../magics-python
    - MAGICS_TEST_SRC=${MAGICS_SRC}/../magics-test
    - MAGICS_PYTHON_TESTS=${MAGICS_TEST_SRC}
    - ECBUILD_SRC=${MAGICS_SRC}/../ecbuild
    - BUILD_DIR=${MAGICS_SRC}/build
    - INSTALL_DIR=/tmp/install
    - MAGPLUS_HOME=${INSTALL_DIR}
    - PYTHONPATH=${PYTHONPATH}:${MAGICS_PYTHON_SRC}
    secure: "gP428EJVq4hiIj8IzoxcrtHDztmU6zzASEt7q7rgOjm8W4cSmZdPwBe6Wsz+gzMMG/q7CyRyk/06/uQzYPxexQdLa5reGJoePCsDSqxWNJgPB/fTmk0Jiq9giFYdxOZJV33ZRvQ2a3YUP4wJCsq1Z7cwbQj3saaZ5gRcdFs7fzqxkWvMP7b4Ln6jm6GPh9EAgggoCm1ZWxrubsph09sffdiM5WVYRmgdPx1XL/WyfXBG+fMItDxR/c76d5UaVS6gP81suq5mNdnqS0m1ZFyN038LCntAzTdsrFAADTZMXJmUJ79RrD29CmsBGHVtXIc6hB9vmjY6oOJIeYapeN0L0ejbVl6bbqExEGXjwLPLhMdDCetYzDBJqbUla1RhT7pdg6kh27fGYk48B6ZFJCpwlrlDCjBJzHGBGuN04UTJ6vQitWm7nQe1TfTskQOd86A9KksGZctn/3vbKR1+QtIg0VFo5k+7sEweOX/UsNqA+a0sijlENzJzx0KS+28kRrlf6BQEbj+ATcx6RRklMgqqSXxRCXmDO9E/WHVOJCbHRDjZSipCsicg+0PS761jU03I6cFvkvSFv3fZ6WNIcsxwORalF+yIV7vXTZlHOfB+JXKPwMIdUW4oY8jExgGMnIiL5cbuaNiFjuDUT9106tDMxHmYyE0uHukBPg/oOztpy94="
    secure: "ONm8kBKpBrmZq+epnszc6uO00QJTjWfugAyvwpFQ0XmvyoudIEhEk4Z5wFGai+p1n524ZqwFQJxCPSmkWAWQuuYhy3a4Yc1wh9N4fYLG+X5hoF9xL6rbMU9ncUt1lr0fzRPfPzsHIa3uJO+xrbdBQicyUI6vm6bKiR68P7DS2wcHwvuII1mELn6/+dzMqmaLw/ywcaLXg5mdP+cbjKLOoVr2jo+P0b2DHqzBfbwvMImQQvz5TXy0P8/pXgfA24SX/W/vJP9+NvhPvajRcuD7xI4dyEmsUh5xUlrV8Fa5e5br3P0tsc+KD0BVbrGraIcDtR0Uh8kJRVgjgSGoVOdW/PKV6XccLMuq11CzoQFCEr7CKe1q/mrKRB4KjPRdU9TukO7XPyGlQq+7/GSi5nL1qVqubg6WNDC6LQx+LMdR0DAZefDS18s/gC1YOr4h0Fwz7L6bc/z4Uo3+EOPpsNrim9Z6k/9J6N2PgB4QmfTR1uZ9ULWr4YZQaCSip8xXN59PdOYCtoEPLojVTYkMhbpw36v/52hYYS/bp/uRa/c0dYmhrPaDMg4NPlOizsWRgB7h7ym3IinDGcJxR27dsKkvl0lsYS5c1+TArCAyTDe1KlWZpOAV+FzBLor1axcyW/iIwYC8fwFblzBvXh83F+IsyrMwtRvZiCKf2JB4Fw/LsB8="

git:
  depth: 1

before_install:
  # check formatting only on linux
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      echo $(clang-format --version)
      echo $(bash --version)
      bash check_formatting.sh
    fi
  # prepare install dir
  - mkdir ${INSTALL_DIR}
  # install conda
  - |
    MINICONDA_URL="https://repo.continuum.io/miniconda"
    curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
    bash ${MINICONDA_FILE} -b
  # activate conda
  - source ~/miniconda3/bin/activate
  # auto-yes for conda
  - conda config --set always_yes yes
  # update conda
  - conda update -n base -c conda-forge conda
  # add extra conda dirs to path so cmake can find packages
  - export PATH=~/miniconda3/lib:~/miniconda3/include:${PATH}

install:
  # install ecbuild
  - git clone --depth 1 https://github.com/ecmwf/ecbuild.git ${ECBUILD_SRC}
  # install magics-python source
  - git clone -b master --depth 1 https://github.com/ecmwf/magics-python.git ${MAGICS_PYTHON_SRC}
  # install magics-test
  - git clone -b master --depth 1 https://github.com/ecmwf/magics-test.git ${MAGICS_TEST_SCR}

  # install conda deps
  - conda install boost libnetcdf expat jinja2 xarray scipy cftime
  - conda install -c conda-forge proj4=5 eccodes pytest cairo pango pip
  # search for conda-installed libraries
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export LDFLAGS="$LDFLAGS -L${CONDA_PREFIX}/lib -Wl,-rpath,${CONDA_PREFIX}/lib"
    fi

#---------------------------------#
#       build configuration       #
#---------------------------------#

script:
  # build
  - mkdir -p ${BUILD_DIR} && cd ${BUILD_DIR}
  - cmake -D CMAKE_INSTALL_PREFIX=${INSTALL_DIR}
          -D ENABLE_FORTRAN=0
          ${MAGICS_SRC}
  - make -j2
  - ctest -j2 --output-on-failure
  - make install > /dev/null
  # test
  - cd ${MAGICS_PYTHON_SRC}
  - pytest
  - cd ${MAGICS_TEST_SRC}
  - pytest

after_success:
  on:
    tags: true
  # Run script to generate PNGs and push result to magics-tests
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      git config --global user.email "magics-travis@ecmwf.int"
      git config --global user.name "Magics Travis CI"
      cd ${MAGICS_TEST_SRC}
      python3 build_regression.py
      git add *
      git commit --message "Magics Travis CI: $TRAVIS_TAG"
      git remote add travis-push https://${GH_USER}:${GH_TOKEN}@github.com/ecmwf/magics-test.git > /dev/null 2>&1
      git tag $TRAVIS_TAG
      git push --quiet --set-upstream travis-push master > /dev/null 2>&1
      git push --tags > /dev/null 2>&1
    fi
