<?xml-stylesheet type='text/css' href='parameter.css'?>
<magics>
<class name='Wind' metview='MWIND' xmltag='wind' prefix='wind'  action='pwind' directory='visualisers'>
  <documentation> Wind plotting facilities allow users to plot wind fields as either arrows or flags.</documentation>

  <parameter name='wind_field_type' from='string' to='WindPlotting' member='type' default='arrows'>
         <documentation> Method of wind field plotting  </documentation>
         <release>Basic implementation in 0.6</release>
         <option name='FlagPlotting' fortran='flags' xml='flags' include='FlagPlotting.h'  />
         <option name='ArrowPlotting' fortran='arrows' xml='arrows' include='ArrowPlotting.h'/>
         <option name='Streamlines' fortran='streamlines'  include='Streamlines.h'/>
  </parameter>

 <parameter name='wind_thinning_method' from='string' to='string' member='thinning_method'  values='data/user' default='data' visible='false'>
         <documentation> Method to control the thinning: 
         data : wind_thinning_factor will determine the frequency as before 
         user : wind_thining_factor will determine the minimal distance in user coordinates betvween 2 winds. 
         the default is "data" for backward compatibility.
          </documentation>
         <release>2.9</release>
  </parameter>

  <parameter name='wind_thinning_factor' from='float' to='float' member='thinning_factor' default='2.0'>
         <documentation> Controls the actual number of wind arrows or flags plotted. See main text for explanation. Needs to 1.0 or larger.</documentation>
         <release>0.6</release>
  </parameter>
</class>


<class name='WindPlotting' xmltag='flags' prefix='wind/wind_flag' action='pwind'  directory='visualisers'>
	<documentation>Parameters common to the flags and arrows.</documentation>

<parameter name='legend' from='string' to='bool' member='legend'  default='off'>
	<release>2.1</release>
	<set value='on' name='wind_legend_text'/>
	<set value='on' name='wind_arrow_legend_text'/>
	<documentation> Add  a wind legend information in the legend </documentation>
</parameter>

<parameter name='wind_legend_only' from='string' to='bool' member='legend_only'  default='off' visible='off'>
	<release>2.1</release>
	<documentation for_docs='no'> Wrep only : to build only the legned... </documentation>
</parameter>

<parameter name='wind_legend_text' from='string' to='string' member='legend_text'  default='vector'>
	<release>2.1</release>
	<documentation> Use your own text in the legend</documentation>
</parameter>

<parameter name='wind_advanced_method' from='string' to='string' member='advanced_method' default='off' values='on/off'> 
         <documentation>Enable advanced plotting of wind (default is off for backward compatibility). 
         The coour is selected according to the intensity of the wind (vector) </documentation>
          <set value='on' name='wind_advanced_colour_selection_type'/> 		 
		  <set value='on' name='wind_advanced_colour_max_value'/> 
		  <set value='on' name='wind_advanced_colour_min_value'/>          
          <set value='on' name='wind_advanced_colour_table_colour_method'/>
          <set value='on' name='wind_advanced_colour_parameter'/>
          <set value='on' name='wind_advanced_colour_level_interval'/>
          <set value='on' name='wind_advanced_colour_level_list'/>
          <set value='on' name='wind_advanced_colour_list'/>
          <set value='on' name='wind_advanced_colour_list_policy'/>
  <release>2.9</release>
</parameter>

<parameter name='wind_advanced_colour_parameter' from='string' to='string' member='colour_method' default='speed' values='speed/parameter'>
         <documentation>if speed, the wind is coloured using the norm of the vector, If parameter, a third parameter is used. </documentation>
         <release>2.9</release>
</parameter>

<parameter name='wind_advanced_colour_selection_type' from='string' to='LevelSelection'  member='levels' default='count'>
         <documentation>Set selection method </documentation>
         <release>2.6</release>
         <option name='CountSelectionType'   fortran='count'  xml='count' docdive='no' include='CountSelectionType.h'/>
         <option name='IntervalSelectionType'   fortran='interval'  xml='interval' docdive='no' include='IntervalSelectionType.h'/>
         <option name='LevelListSelectionType'   fortran='list'  xml='list' docdive='no' include='LevelListSelectionType.h'/>
         <set value='list' name='wind_advanced_colour_level_list'/>
         <set value='interval' name='wind_advanced_colour_level_interval'/>	
         <set value='interval' name='wind_advanced_colour_reference_level'/>
         <set value='count' name='wind_advanced_colour_reference_level'/>
         <set value='count' name='wind_advanced_colour_level_count'/>
         <set value='count' name='wind_advanced_colour_level_tolerance'/>
</parameter>

<parameter name='wind_advanced_colour_max_value' from='float' to='float' member='max' default='1.e21'>
         <documentation>Max value to plot </documentation>
         <release>2.6</release>
</parameter>

<parameter name='wind_advanced_colour_min_value' from='float' to='float' member='min' default='-1.e21'>
         <documentation>Min value to plot </documentation>
         <release>2.6</release>
</parameter>

<parameter name='wind_advanced_colour_level_count' from='int' to='int' member='count' default='10'>
         <documentation>Number of levels to be plotted. Magics will try to find "nice levels", 
         this means that the number of levels could be slightly different</documentation>
         <release>2.6</release>
</parameter>

<parameter name='wind_advanced_colour_level_tolerance' from='int' to='int' member='tolerance' default='2'>
         <documentation> Tolerance: Do not use "nice levels" if the number of levels is really to different [count +/- tolerance] </documentation>
         <release>2.6</release>
</parameter>
 
<parameter name='wind_advanced_colour_reference_level' from='float' to='float' member='reference'  default='0.0'>
         <documentation> Level from which the level interval is calculated </documentation>
         <release>2.6</release>
  </parameter>


  <parameter name='wind_advanced_colour_level_interval' from='float' to='float'
             member='interval'  default='8.0'>
         <documentation> Interval in data units between different bands of colours </documentation>
         <release>2.6</release>
  </parameter>
 
	<parameter name='wind_advanced_colour_level_list' from='floatarray' to='floatarray'
             member='list'	 default='floatarray()' >
         <documentation> List of levels  to be used </documentation>
         <release>2.6</release>
  </parameter>
  
  <parameter name='wind_advanced_colour_table_colour_method' from='string' to='ColourTechnique'
             member='colourMethod' 	 default='calculate' >
         <documentation> Method of generating the colours </documentation>
  		<set value='calculate' name='wind_advanced_colour_max_level_colour'/>
  		<set value='calculate' name='wind_advanced_colour_min_level_colour'/>
  		<set value='calculate' name='wind_advanced_colour_direction'/>
  		<set value='list' name='wind_advanced_colour_list'/>
  		<set value='list' name='wind_advanced_colour_list_policy'/>
         <option name='CalculateColourTechnique' fortran='calculate' xml='calculate' docdive='no' include='CalculateColourTechnique.h'/>
         <option name='ListColourTechnique'      fortran='list'      xml='list'      docdive='no' include='ListColourTechnique.h'/>
         <release>2.6</release>
  </parameter>

  <parameter name='wind_advanced_colour_max_level_colour' from='string' to='Colour' member='maxColour' default='blue'>
         <documentation> Highest shading band colour </documentation>
         <release>2.6</release>
  </parameter>

  <parameter name='wind_advanced_colour_min_level_colour' from='string' to='Colour' member='minColour'  default='red'>
         <documentation> Lowest shading band colour </documentation>
         <release>2.6</release>
  </parameter>

  <parameter name='wind_advanced_colour_direction' from='string' to='string' member='direction' default='anti_clockwise' values='clockwise/anti_clockwise'>
         <documentation> Direction of colour sequencing for plotting  </documentation>
         <release>2.6</release>
  </parameter>

  <parameter name='wind_advanced_colour_list' from='stringarray' to='stringarray' colourlist='on' member='colours' default='stringarray()'>
         <documentation> List of colours to be used in wind plotting </documentation>
         <release>2.6</release>
  </parameter>
  <parameter name='wind_advanced_colour_list_policy' from='string' to='ListPolicy' member='colour_policy' default='lastone' >
         <documentation> What to do if, the list of colours is smaller that the list of intervals: lastone/cycle </documentation>     
         <release>2.6</release>
  </parameter>
  
 <!-- 
      <parameter name='wind_advanced_colour_outlayer_method' from='string' to='NoOutLayerTechnique'
             member='outlayer' default='none' include='OutLayerTechnique.h' >
         <documentation> outlayer method </documentation> 
         <option name='NoOutLayerTechnique' fortran='none' xml='nooutlayer' docdive='no' include='OutLayerTechnique.h'/>
         <option name='SimpleOutLayerTechnique' fortran='simple' xml='simple' docdive='no' include='OutLayerTechnique.h'/>                 
         <release>2.6</release>
  	  </parameter>    
  	    <parameter name='wind_advanced_colour_outlayer_min_value' from='float' to='float'
             member='outlayer_min' default='-1.e21' visible='no'>
         <documentation> outlayer min value </documentation>         
         <release>2.6</release>
  	  </parameter>   
  	  <parameter name='wind_advanced_colour_outlayer_max_value' from='float' to='float'
             member='outlayer_max' default='1.e21' visible='no'>
         <documentation> outlayer max value </documentation>         
         <release>2.6</release>
  	  </parameter>    
  	--> 
      
</class>

 <class name='CalmIndicator' directory='visualisers' /> 
 <class name='NoCalmIndicator' inherits='CalmIndicator' include='CalmIndicator.h' directory='visualisers' />  
 <class name='OriginMarker' directory='visualisers' /> 
 <class name='DotOriginMarker' inherits='OriginMarker' include='OriginMarker.h' directory='visualisers' />
 <class name='CircleOriginMarker'  inherits='OriginMarker' include='OriginMarker.h' directory='visualisers' />
 <class name='NoOriginMarker' inherits='OriginMarker' include='OriginMarker.h' directory='visualisers' />

<class name='FlagPlotting' xmltag='flags' prefix='wind/wind_flag' inherits='WindPlotting' doc_inherits='no' action='pwind'  directory='visualisers'>
  <documentation> WMO standard wind flags; represented by barbs and solid pennants </documentation> 
  <parameter name='wind_flag_calm_indicator' from='string' to='CalmIndicator' member='calm'  default='on' values='on/off'>
        <documentation> Plot calm indicator circle, if wind speed is less than 0.5 m/s (ON / OFF) </documentation>
        <option name='CalmIndicator' fortran='on' xml='calm' include='CalmIndicator.h' />
        <option name='NoCalmIndicator' fortran='off' xml='nocalm' include='CalmIndicator.h'  />
	<set value='on' name='wind_flag_calm_indicator_size'/>
  </parameter>

  <parameter name='wind_flag_calm_indicator_size' from='float' to='float' member='calm_indicator_size'  default='0.3'>
         <documentation> The radius of the circle which indicates calm in centimeter </documentation>
        
  </parameter>
  
   <parameter name='wind_flag_calm_below' from='float' to='float' member='calm_below'  default='0.5' >
		
         <documentation> Winds less than or equal to this value will be drawn as calm. </documentation>
  </parameter>

  <parameter name='wind_flag_colour' from='string' to='Colour' member='colour'  default='blue'>
			 
         <documentation> Colour of wind flag shaft, barbs and pennants  </documentation>
        
  </parameter>

  <parameter name='wind_flag_cross_boundary' from='string' to='bool' member='cross_boundary' default='on' visible='false'>
			
         <documentation> If set to 'ON', wind flags are truncated if they cross the subpage border (ON / OFF) </documentation>
         <release>Basic implementation in 0.6</release>
  </parameter>

  <parameter name='wind_flag_length' from='float' to='float' member='length'  default='1.0'>
         <documentation> Physical length of wind flag shaft </documentation>
         <release>Basic implementation in 0.6</release>
  </parameter>

  <parameter name='wind_flag_max_speed' from='float' to='float' member='max_speed'  default='1.0e+21'>
         <documentation> Highest value of wind speed to be plotted </documentation>
         <migration> New Magics: Parameter wind_flag_max_speed sent to new Magics[Wind].  </migration>
         <release>Basic implementation in 0.6</release>
  </parameter>

  <parameter name='wind_flag_min_speed' from='float' to='float' member='min_speed' default='-1.0e+21' >
         <documentation> Lowest value of wind speed to be plotted </documentation>
         <release>Basic implementation in 0.6</release>
  </parameter>

  <parameter name='wind_flag_mode' from='string' to='string' member='wind_flag_mode'  default='normal' implemented='no'>
      <release>Basic implementation in 0.6</release>
      <documentation> Controls the line style of the wind flag shaft.(NORMAL / OFF_LEVEL / OFF_TIME) </documentation>
  </parameter>

 <parameter name='wind_flag_style' from='string' to='LineStyle' member='style' default='solid'>
         <documentation> Controls the line style of the wind flag shaft. </documentation>
         <release>Basic implementation in 0.6</release>
  </parameter>

  
   <parameter name='wind_flag_origin_marker' from='string' to='OriginMarker' member='origin'  default='circle' values='circle/dot/off'> 
	<release>Basic implementation in 0.6</release>
	<documentation> Symbol for marking the exact location of the current grid point.</documentation>
	<option name='DotOriginMarker' fortran='dot' xml='dotmarker' 	include='OriginMarker.h' />
	<option name='CircleOriginMarker' fortran='circle' xml='circlemarker' 	include='OriginMarker.h' />
	<option name='NoOriginMarker' fortran='off' xml='nomarker' 	include='OriginMarker.h' />
  </parameter>
  
  <parameter name='wind_flag_origin_marker_size' from='float' to='float' member='origin_marker_size'  default='0.3'> 
  </parameter>

  <parameter name='wind_flag_thickness' from='int' to='int' member='thickness'  default='1'>
	     <release>Basic implementation in 0.6</release>
         <documentation> Thickness of wind flag shaft </documentation>  </parameter>
</class>

<class name = 'ArrowPlotting' xmltag='arrow' prefix='wind/wind_arrow' inherits='WindPlotting' doc_inherits='no' action='pwind' directory='visualisers'>
  <documentation></documentation>

  <parameter name='wind_arrow_calm_indicator' from='string' to='CalmIndicator' member='calm' default='off' values='on/off'>
	<release>Basic implementation in 0.6</release>
	  <option name='CalmIndicator' fortran='on' xml='calm' include='CalmIndicator.h' />
      <option name='NoCalmIndicator' fortran='off' xml='nocalm' include='CalmIndicator.h'  />
      <set value='on' name='wind_arrow_calm_indicator_size'/>
	<documentation>Plot calm indicator circle if wind speed is less than or equal to the value in WIND_ARROW_CALM_BELOW (ON / OFF)</documentation>
  </parameter>

  <parameter name='wind_arrow_calm_indicator_size' from='float' to='float' member='calm_indicator_size' default='0.3'>
	<release>Basic implementation in 0.6</release>
	<documentation> The radius of the circle which indicates calm </documentation>
  </parameter>

  <parameter name='wind_arrow_calm_below' from='float' to='float' member='calm_below' default='0.5'>
	<release>Basic implementation in 0.6</release>
	<documentation> Winds less than or equal to this value will be drawn as calm. </documentation>
  </parameter>

  <parameter name='wind_arrow_colour' from='string' to='Colour' member='colour' default='blue' >
	<release>Basic implementation in 0.6</release>
	<documentation> Colour of wind arrow  </documentation>
  </parameter>

  <parameter name='wind_arrow_cross_boundary' from='string' to='bool' member='cross_boundary' default='on' implemented='no'>
	<release>Basic implementation in 0.6</release>
        <documentation> If set to 'ON', wind arrows are truncated if they cross the subpage border (ON / OFF). </documentation>
  </parameter>

  <parameter name='wind_arrow_head_shape' from='int' to='int' member='head' default='0' >
	<release>Basic implementation in  1.3.</release>
	<documentation>Table number, XY, indicating shape of arrowhead X</documentation>
  </parameter>
  
  <parameter name='wind_arrow_head_ratio' from='float' to='float' member='ratio'  default='0.3' >
	<release>Basic implementation in 0.6</release>
	<documentation> Table number, XY, indicating style and shape of arrowhead X </documentation>
  </parameter>
  
 

  

 

  <parameter name='wind_arrow_max_speed' from='float' to='float' member='max_speed' default='1.0e+21'>
	 <release>Basic implementation in 0.6</release>
         <documentation> Highest value of wind speed to be plotted </documentation>
  </parameter>

  <parameter name='wind_arrow_min_speed' from='float' to='float' member='min_speed' default='-1.0e+21'>
	<release>Basic implementation in 0.6</release>
        <documentation> Lowest value of wind speed to be plotted </documentation>
  </parameter>

  <parameter name='wind_arrow_origin_position' from='string' to='ArrowPosition' member='origin_position' default='tail' values='centre/tail'>
	<release>Basic implementation in 0.6</release>
        <documentation> The position of the wind arrow relative to the wind origin  </documentation>
  </parameter>

  <parameter name='wind_arrow_thickness' from='int' to='int' member='thickness'  default='1'>
	 <release>Basic implementation in 0.8</release>
         <documentation> Thickness of wind arrow shaft </documentation>
  </parameter>
  
  <parameter name='wind_arrow_style' from='string' to='LineStyle' member='style'  default='solid'>
         <documentation>Controls the line style of the arrow flag shaft.</documentation>
         <release>Basic implementation in 0.8.</release>
  </parameter>
   <parameter name='wind_arrow_unit_system' from='string' to='string' member='unit_system'  default='paper' values='paper/user' visible='false'>
        <documentation>Coordinates sysem used to sacle the arrow : paper -->1cm, user-->1 user unit</documentation>
  </parameter>

  <parameter name='wind_arrow_unit_velocity' from='float' to='float' member='unit_velocity'  default='25.0'>
        <documentation>Wind speed in m/s represented by a unit vector (1.0 cm or 1.0 user unit depending on the value of wind_arrow_unit_system ).</documentation>
  </parameter>  
  <parameter name='wind_arrow_legend_text' from='string' to='string' member='legend_unit'  default='m/s'>
        <documentation> Text to be used as units in the legend text </documentation>
  </parameter>
</class>   
	
</magics>
